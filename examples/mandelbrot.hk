//
// mandelbrot.hk
//

import { floor } from math;
val pixels = [" ", ".", ":", ";", "+", "=", "x", "X", "$", "&"];

val y_min = -0.2;
val y_max = 0.1;
val x_min = -1.5;
val x_max = -1.1;

for (mut y_pixel = 0; y_pixel < 24; y_pixel++) {
  val y = (y_pixel / 24) * (y_max - y_min) + y_min;
  for (mut x_pixel = 0; x_pixel < 80; x_pixel++) {
    val x = (x_pixel / 79) * (x_max - x_min) + x_min;
    mut pixel = " ";
    mut x0 = x;
    mut y0 = y;
    for (mut iter = 0; iter < 80; iter++) {
      mut x1 = (x0 * x0) - (y0 * y0);
      mut y1 = 2 * x0 * y0;
      x1 = x1 + x;
      y1 = y1 + y;
      x0 = x1;
      y0 = y1;
      val d = (x0 * x0) + (y0 * y0);
      if (d > 4) {
        pixel = pixels[floor(iter / 8)];
        break;
      }
    }
    print(pixel);
  }
  println("");
}
